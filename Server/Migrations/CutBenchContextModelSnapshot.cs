// <auto-generated />
using System;
using DominosCutScreen.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DominosCutScreen.Server.Migrations
{
    [DbContext(typeof(CutBenchContext))]
    partial class CutBenchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("DominosCutScreen.Shared.SettingsService", b =>
                {
                    b.Property<int>("SettingsServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlertInterval")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FetchInterval")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GraceTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MakelineCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MakelineServer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OvenTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("SettingsServiceId");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            SettingsServiceId = 1,
                            AlertInterval = 150,
                            FetchInterval = 5,
                            GraceTime = 90,
                            MakelineCode = 2,
                            MakelineServer = "http://localhost:59108",
                            OvenTime = 300
                        });
                });

            modelBuilder.Entity("DominosCutScreen.Shared.SettingsService", b =>
                {
                    b.OwnsOne("DominosCutScreen.Shared.QuietTime", "QuietTime", b1 =>
                        {
                            b1.Property<int>("SettingsServiceId")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeOnly>("End")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsEnabled")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeOnly>("Start")
                                .HasColumnType("TEXT");

                            b1.HasKey("SettingsServiceId");

                            b1.ToTable("Settings");

                            b1.WithOwner()
                                .HasForeignKey("SettingsServiceId");

                            b1.HasData(
                                new
                                {
                                    SettingsServiceId = 1,
                                    End = new TimeOnly(0, 0, 0),
                                    IsEnabled = false,
                                    Start = new TimeOnly(0, 0, 0)
                                });
                        });

                    b.OwnsOne("DominosCutScreen.Shared.TimedOrderAlarm", "TimedOrderAlarm", b1 =>
                        {
                            b1.Property<int>("SettingsServiceId")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsEnabled")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("MinPizzaThreshold")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("SecondsPerPizza")
                                .HasColumnType("INTEGER");

                            b1.HasKey("SettingsServiceId");

                            b1.ToTable("Settings");

                            b1.WithOwner()
                                .HasForeignKey("SettingsServiceId");

                            b1.HasData(
                                new
                                {
                                    SettingsServiceId = 1,
                                    IsEnabled = false,
                                    MinPizzaThreshold = 7,
                                    SecondsPerPizza = 15
                                });
                        });

                    b.Navigation("QuietTime")
                        .IsRequired();

                    b.Navigation("TimedOrderAlarm")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
